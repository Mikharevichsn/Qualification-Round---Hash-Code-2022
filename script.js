import { parseFile } from './parser.js';

const obj = parseFile();
// console.log('üöÄ ~ file: script.js ~ line 3 ~ obj', obj);

// –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–µ–∫—Ç—ã –ø–æ –±–µ—Å—Ç–ë–µ—Ñ–æ—Ä
// console.log('–±—ã–ª–æ: ', JSON.stringify(obj.projects, null, 2));
obj.projects = obj.projects.sort((a, b) => a.bestBefore - b.bestBefore);
// console.log('—Å—Ç–∞–ª–æ: ', JSON.stringify(obj.projects, null, 2));

// –ø—Ä–æ–±–æ–≤–∞—Ç—å –∑–∞–ø–æ–ª–Ω–∏—Ç—å –ø–µ—Ä–≤—ã–π –ø—Ä–æ–µ–∫—Ç —á–µ–ª–æ–≤–µ–∫–∞–º–∏

// const checkCanFillProject = (project) => {
//   for (const skillReq of project.skillsRequired) {
//     // console.log(
//     //   'üöÄ ~ file: script.js ~ line 15 ~ checkCanFillProject ~ skillReq',
//     //   skillReq
//     // );
//     // —Å–Ω–∞—á–∞–ª–∞ –∏—â–µ–º —Ç–æ–≥–æ —É –∫–æ–≥–æ —Ç–∞–∫–æ–π –∂–µ —Å–∫–∏–ª–ª
//     const candidate = obj.contributors.find((contr) => {
//       // console.log('üöÄ ~ file: script.js ~ line 21 ~ candidate ~ contr', contr);
//       // console.log(
//       //   'check name = ',
//       //   contr.skills.skillName === skillReq.skillName
//       // );
//       // console.log(
//       //   'check score = ',
//       //   contr.skills.skillScore === skillReq.skillScore
//       // );
//       const skill = contr.skills.find(
//         (s) => s.skillName === skillReq.skillName
//       );
//       if (skill && skill.skillScore === skillReq.skillScore) return true;
//     });
//     // console.log('candidate tmp = ', candidate);

//     if (candidate) {
//       console.log('--------');
//       console.log('project = ', project);
//       console.log('skillReq = ', skillReq);
//       console.log('candidate = ', candidate);
//       console.log('--------');
//     }
//   }
// };

const checkCanFillProject = (project) => {
  const getInitialData = () => {
    const skillsRequiredCopy = JSON.parse(
      JSON.stringify(project.skillsRequired)
    );
    console.log(
      'üöÄ ~ file: script.js ~ line 49 ~ checkCanFillProject ~ skillsRequiredCopy',
      skillsRequiredCopy
    );

    const contributorsCopy = JSON.parse(JSON.stringify(obj.contributors));
    console.log(
      'üöÄ ~ file: script.js ~ line 55 ~ checkCanFillProject ~ contributorsCopy',
      contributorsCopy
    );

    return {
      skillsRequired: skillsRequiredCopy,
      contributors: contributorsCopy,
    };
  };

  const data = getInitialData();
  console.log(
    'üöÄ ~ file: script.js ~ line 70 ~ checkCanFillProject ~ data',
    JSON.stringify(data, null, 2)
  );

  data.skillsRequired.forEach((neededSkill) => {
    const candidates = data.contributors.filter((c) =>
      c.skills.some((s) => s.skillName === neededSkill.skillName)
    );

    const perfectVariant = candidates.find((c) =>
      c.skills.some(
        (s) =>
          s.skillName === neededSkill.skillName &&
          s.skillScore === neededSkill.skillScore
      )
    );

    if (perfectVariant) {
      neededSkill.contributor = perfectVariant;
      data.contributors.splice();
    }
  });
};

// console.log('obj.projects[1] = ', obj.projects[1]);
checkCanFillProject(obj.projects[1]);
// for (const project of obj.projects) {
//   checkCanFillProject(project);
// }

// –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å—Ç–∞–ª–∏—Å—å –ª–∏ —Å–≤–æ–±–æ–¥–Ω—ã–µ –ª—é–¥–∏ –∏ –ª–µ–∑—É—Ç –ª–∏ –æ–Ω–∏ –≤ –ª—é–±–æ–π —Å–≤–æ–±–æ–¥–Ω—ã–π –ø—Ä–æ–µ–∫—Ç
// –µ—Å–ª–∏ –∫–∞–∫–æ–π-—Ç–æ –ø—Ä–æ–µ–∫—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è - –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–≤—ã—à–∞—é—Ç—Å—è –ª–∏ —Å–∫–∏–ª–ª—ã
// —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ü–∏—Ñ—Ä—É —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è –∏ –µ—Å–ª–∏ –∫—Ç–æ –æ—Å–≤–æ–±–æ–¥–∏–ª—Å—è - –ø—Ä–æ–≤–µ—Ä—è–µ–º –ª–µ–∑–µ—Ç –ª–∏ –æ–Ω –≤ —Å–≤–æ–±–æ–¥–Ω—ã–π –ø—Ä–æ–µ–∫—Ç

// –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:
// –¥–µ–Ω—å:
// –ø—Ä–æ–µ–∫—Ç –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ:
// —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏:
